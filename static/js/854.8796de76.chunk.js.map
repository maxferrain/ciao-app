{"version":3,"file":"static/js/854.8796de76.chunk.js","mappings":"oKACA,EAAmC,kCAAnC,EAA+E,yBAA/E,EAAiH,wBAAjH,EAAiJ,uBAAjJ,EAAyL,gCAAzL,EAAuO,6BAAvO,EAA0R,qCAA1R,EAA+U,+BAA/U,EAAsX,uBAAtX,EAA6Z,+BAA7Z,EAAmc,sBAAnc,EAAoe,0B,6BCoBpe,EAZmB,SAACA,GAChB,OACI,+BACI,SAAC,KAAD,CACIC,GAAE,qBAAgBD,EAAME,IACxBC,UAAW,qBAAEC,SAAyBC,EAAiB,IAF3D,SAGKL,EAAMM,UCEvB,EARgB,SAACN,GACb,OACI,gBAAKG,UAAWH,EAAME,GAAK,IAAM,EAAIG,EAAyBA,EAA9D,UACI,iBAAMF,UAAWE,EAAjB,SAAuCL,EAAMO,a,oBCLnDC,EAAiB,SAACR,GAOpB,OACI,SAAC,KAAD,CACIS,cAAe,CAACC,YAAa,IAC7BC,SATc,SAACC,EAAD,GAAmD,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,UAChDd,EAAMe,YAAYH,EAAOF,aACzBG,GAAc,GACdC,KAIA,SAGK,gBAAEF,EAAF,EAAEA,OAAQI,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,aAAcC,EAAtC,EAAsCA,aAAtC,OACG,kBAAMP,SAAUM,EAAcd,UAAWE,EAAzC,WACI,qBAAUC,KAAK,cAAcH,UAAWE,EAAkBc,YAAY,qBAClEC,SAAUJ,EAAcK,MAAOT,EAAOF,eAE1C,gBAAKP,UAAWE,EAAhB,UACI,mBAAQiB,KAAK,SAASC,SAAUL,EAAhC,UACI,cAAGf,UAAWE,EAAd,UACI,SAAC,KAAD,CAAMF,UAAWE,EAAuBmB,KAAK,iCA0B7E,EAjBgB,SAACxB,GAEb,IAAMyB,EAAkBzB,EAAM0B,aAAaC,KAAI,SAACC,GAAD,OAAY,SAAC,EAAD,CAAuB1B,GAAI0B,EAAE1B,GAAII,KAAMsB,EAAEtB,MAAxBsB,EAAE1B,OACxE2B,EAAmB7B,EAAM8B,SAASH,KAAI,SAACI,GAAD,OAAY,SAAC,EAAD,CAAoB7B,GAAI6B,EAAE7B,GAAIK,QAASwB,EAAExB,SAA3BwB,EAAE7B,OAGxE,OACI,iBAAKC,UAAWE,EAAhB,WACI,gBAAKF,UAAWE,EAAhB,SAAkCoB,KAClC,iBAAKtB,UAAWE,EAAhB,UACKwB,GACD,SAACrB,EAAD,CAAgBO,YAAaf,EAAMe,qB,uCC5B7CiB,EAAkB,SAACC,GAAD,MAAY,CAACC,OAAQD,EAAME,KAAKD,SCIxD,GAAeE,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAjBoB,SAACJ,GACrB,MAAO,CACHP,aAAcO,EAAMK,YAAYZ,aAChCI,SAAUG,EAAMK,YAAYR,aAIT,SAACS,GACxB,MAAO,CACHxB,YAAa,SAACL,GACV6B,GAASC,EAAAA,EAAAA,GAAc9B,UDIH,SAAC+B,GAO7B,OAAOJ,EAAAA,EAAAA,IAAQL,EAARK,EANmB,SAACrC,GACnB,OAAQA,EAAMkC,QAER,SAACO,GAAD,UAAezC,KADf,SAAC,KAAD,CAAUC,GAAI,gBCDhC,CAGEyC","sources":["webpack://ciao-app/./src/components/Dialogs/Dialogs.module.scss?d037","components/Dialogs/DialogsItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogsContainer\":\"Dialogs_dialogsContainer__UX2ps\",\"senders\":\"Dialogs_senders__dASde\",\"active\":\"Dialogs_active__8puD0\",\"chats\":\"Dialogs_chats__l-1QJ\",\"myMessageItems\":\"Dialogs_myMessageItems__UTFO4\",\"messageItem\":\"Dialogs_messageItem__Gm-g5\",\"notMineMessageItems\":\"Dialogs_notMineMessageItems__LOcdQ\",\"createPostBtn\":\"Dialogs_createPostBtn__oEEWS\",\"badge\":\"Dialogs_badge__Mh0Ch\",\"createPostImg\":\"Dialogs_createPostImg__DEXao\",\"form\":\"Dialogs_form__W7GVf\",\"textarea\":\"Dialogs_textarea__hzZ4P\"};","import classes from './../Dialogs.module.scss'\nimport {NavLink} from 'react-router-dom'\nimport {FC} from \"react\";\n\ntype DialogPropsType = {\n    id: number\n    name: string\n}\n\nconst DialogItem = (props: DialogPropsType) => {\n    return (\n        <>\n            <NavLink\n                to={`/dialogs/id${props.id}`}\n                className={({isActive}) => isActive ? classes.active : ''}>\n                {props.name}\n            </NavLink>\n        </>\n    )\n}\n\nexport default DialogItem","import classes from './../Dialogs.module.scss'\nimport {FC} from \"react\";\n\ntype MessagePropsType = {\n    message: string,\n    id: number\n}\n\n\nconst Message = (props: MessagePropsType) => {\n    return (\n        <div className={props.id % 2 === 0 ? classes.myMessageItems : classes.notMineMessageItems}>\n            <span className={classes.messageItem}>{props.message}</span>\n        </div>\n    )\n}\n\nexport default Message\n","import classes from './Dialogs.module.scss'\nimport React, {FC} from \"react\";\nimport DialogItem from './DialogsItem/DialogItem';\nimport Message from './Message/Message';\nimport {Icon} from \"@iconify/react\";\nimport {Formik} from \"formik\";\n\nconst AddMessageForm = (props: any) => {\n    const onSendMessage = (values: any, {setSubmitting, resetForm}: any) => {\n        props.sendMessage(values.messageText)\n        setSubmitting(false)\n        resetForm()\n    }\n\n    return (\n        <Formik\n            initialValues={{messageText: ''}}\n            onSubmit={onSendMessage}>\n            {({values, handleChange, handleSubmit, isSubmitting,}) => (\n                <form onSubmit={handleSubmit} className={classes.form}>\n                    <textarea name=\"messageText\" className={classes.textarea} placeholder='Write a message...'\n                        onChange={handleChange} value={values.messageText}\n                    />\n                    <div className={classes.createPostBtn}>\n                        <button type=\"submit\" disabled={isSubmitting}>\n                            <i className={classes.badge}>\n                                <Icon className={classes.createPostImg} icon=\"akar-icons:send\"/></i>\n                        </button>\n                    </div>\n                </form>\n            )}\n        </Formik>\n    )\n}\n\nconst Dialogs = (props: any) => {\n\n    const dialogsElements = props.contactsList.map((d: any) => <DialogItem key={d.id} id={d.id} name={d.name}/>)\n    const messagesElements = props.messages.map((m: any) => <Message key={m.id} id={m.id} message={m.message}/>)\n\n\n    return (\n        <div className={classes.dialogsContainer}>\n            <div className={classes.senders}>{dialogsElements}</div>\n            <div className={classes.chats}>\n                {messagesElements}\n                <AddMessageForm sendMessage={props.sendMessage}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs\n","import {connect} from \"react-redux\";\nimport {Navigate, Routes, Route} from \"react-router-dom\";\nimport React from \"react\";\n\n// const mapStateToProps = (state) => ({isAuth: state.auth.isAuth})\n//\n// export const withAuthRedirect = (Component) => {\n//\n//     class RedirectComponent extends React.Component {\n//         render() {\n//             return !this.props.isAuth\n//                 ? <Navigate to={'/login'} />\n//                 : <Component {...this.props}/>\n//         }\n//     }\n//     return connect(mapStateToProps)(RedirectComponent)\n// }\n\nconst mapStateToProps = (state) => ({isAuth: state.auth.isAuth})\n\nexport const withAuthRedirect = (Component) => {\n    const RedirectComponent = (props) => {\n            return !props.isAuth\n                ? <Navigate to={'/login'} />\n                : <Component {...props}/>\n    }\n\n    return connect(mapStateToProps)(RedirectComponent)\n}","import {connect} from \"react-redux\";\nimport Dialogs from \"./Dialogs\";\nimport {sendMessageAC} from \"../../redux/dialogs-reducer\";\nimport {compose} from \"redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\nconst mapStateToProps = (state) => {\n    return {\n        contactsList: state.dialogsPage.contactsList,\n        messages: state.dialogsPage.messages\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (messageText) => {\n            dispatch(sendMessageAC(messageText))\n        }\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n\n"],"names":["props","to","id","className","isActive","classes","name","message","AddMessageForm","initialValues","messageText","onSubmit","values","setSubmitting","resetForm","sendMessage","handleChange","handleSubmit","isSubmitting","placeholder","onChange","value","type","disabled","icon","dialogsElements","contactsList","map","d","messagesElements","messages","m","mapStateToProps","state","isAuth","auth","compose","connect","dialogsPage","dispatch","sendMessageAC","Component","Dialogs"],"sourceRoot":""}